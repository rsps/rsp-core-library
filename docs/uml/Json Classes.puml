@startuml

skinparam stereotypeCBackgroundColor<<Exception>> Red
skinparam stereotypeCBackgroundColor<<std::runtime_error>> Red
'hide stereotype

title JSON Classes

namespace rsp {

namespace utils {

class Variant

}

namespace json {

enum JsonTypes {
    Null
    Bool
    Number
    String
    Object
    Array
}

class JsonValue {
    +JsonValue()
    +JsonValue(aType: JsonTypes)
    +JsonValue<T>(aValue:T)

    +operator=(const JsonValue&): JsonValue&
    +operator=(JsonValue&&): JsonValue&
    +operator<T>=(T aValue): JsonValue&

    +Encode(aPrettyPrint: bool = false, aForceToUCS2: bool = false) const: string
    +{static} Decode(aJson: string): JsonValue

    +GetJsonType() const : JsonTypes
    +{static} GetJsonTypeAsString(aType: JsonTypes): string

    +IsArray() const: bool
    +IsObject() const: bool
    +operator[](aKey: string): JsonValue&
    +operator[](aIndex: integer): JsonValue&
    +GetCount() const: std::size_t
    +GetMemberNames() const: std::vector<string>
    +MemberExists(aKey: string) const: bool
    +Add(aValue: JsonValue): JsonValue&
    +Add(aKey: string, aValue: JsonValue): JsonValue&
    +Remove(aIndex: integer): JsonValue&
    +Remove(aKey: string): JsonValue&

    +Clear()
}

class JsonDecoder {
    Used to traverse and decode a JSON formatted string
    --
    +JsonDecoder(aJson: string);
    +GetValue(): JsonValue
}

class EJsonException <<std::runtime_error>> {
    Base class for all JSON exceptions
}

class EJsonParseError <<Exception>> {
    Thrown if a JSON element
    is not spelled correctly:
    true, false, null, or if
    string contains illegal
    escape codes.
}

class EJsonNumberError <<Exception>> {
    Thrown if a JSON number
    element contains illegal
    characters.
}

class EJsonTypeError <<Exception>> {
    Thrown if a JsonValue is
    accessed as an array or
    object, but the value can
    not be converted to either.
}

class EMemberNotExisting <<Exception>> {
    Thrown when trying to access a
    non existing member from a
    JsonValue of type Object.
}

JsonValue -down[hidden]- EJsonException

EJsonException <|-- EJsonParseError
EJsonException <|-- EJsonTypeError
EJsonException <|-- EJsonNumberError
EJsonException <|-- EMemberNotExisting

std::string <|-- JsonDecoder

rsp.utils.Variant <|-- JsonValue
JsonDecoder o-- JsonValue
JsonTypes o-- JsonValue

}

@enduml
