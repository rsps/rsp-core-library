var.basedir = "@CMAKE_RUNTIME_OUTPUT_DIRECTORY@/webserver"

server.modules += (
    "mod_openssl",
    "mod_authn_file",
    "mod_auth",
    "mod_cgi",
    "mod_alias"
)

server.document-root = basedir + "/public/"

server.port = 8443
server.name = "server.localhost"
ssl.pemfile = basedir + "/ssl/certs/server.pem"
ssl.engine  = "enable"
ssl.ca-file = basedir + "/ssl/ca/ca.pem"

ssl.openssl.ssl-conf-cmd = ("MinProtocol" => "TLSv1.3",
                            "Options" => "-ServerPreference")

server.username = "www-data"
server.groupname = "www-data"

mimetype.assign = (
    ".html" => "text/html",
    ".txt" => "text/plain",
    ".json" => "application/json",
    ".jpg" => "image/jpeg",
    ".png" => "image/png"
)

server.errorlog = basedir + "/error.log"
server.breakagelog = basedir + "/cgi.log"

debug.log-request-handling = "enable"
debug.log-request-header = "enable"
#debug.log-state-handling = "enable"
debug.log-ssl-noise = "enable"

server.upload-dirs=( basedir )
server.stream-request-body = 1

static-file.exclude-extensions = ( ".fcgi", ".php", ".rb", "~", ".inc" )
index-file.names = ( "index.html" )

$HTTP["host"] == "server.localhost" {
    server.document-root = basedir + "/public/"
}

$HTTP["url"] =~ "^/cgi/" {
        alias.url += ( "/cgi/" => basedir + "/cgi/" )
        cgi.assign = (
            ".sh"  => "/bin/bash",
        )
}

auth.backend = "plain"
auth.backend.plain.userfile = basedir + "/users.plain"
auth.require = ( "/authenticated/" =>
    (
        "method" => "basic",
        "realm" => "login",
        "require" => "valid-user"
    )
)


$SERVER["socket"] == ":44300" {
    ssl.engine  = "enable"
    ssl.pemfile = basedir + "/ssl/certs/server.pem"
    ssl.ca-file = basedir + "/ssl/ca/ca.pem"
    
    ssl.verifyclient.exportcert = "enable"
    ssl.verifyclient.activate   = "enable"
    ssl.verifyclient.username   = "SSL_CLIENT_S_DN_CN"
    ssl.verifyclient.enforce    = "enable"
    ssl.verifyclient.depth      = 3
}
